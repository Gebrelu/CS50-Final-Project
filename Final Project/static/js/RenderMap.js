// perform a 'GET' ajax call to flask with Jquery, to pull the JSON  trigger this ajax call when the document loads
// The $.ajax method takes many parameters, some of which are required and others optional.
// It contains two callback options success and error to handle the response received.
// https://stackoverflow.com/questions/36846784/ajax-get-request-not-working-with-flask
// https://stackoverflow.com/questions/47679318/need-to-store-ajax-response-to-a-global-variable
$(document).ready(function(){
  var json_object = null;
  $.when($.ajax({
    url: "/homepage",
    type: 'GET',
    success: function(result){
      json_result = result;
      initMap(json_result);
    },
    error: function(error){
      console.log('Error ${error}');
    }
  }));
});

// https://pietschsoft.com/post/2015/09/05/javascript-basics-how-to-create-a-dictionary-with-keyvalue-pairs
// create a dict to store the markers that get generated by the add_markers function
var currently_highlighted;
var marker_selected;

function initMap(MyResult){
  var options = {
    zoom:12,
    center:{lat:49.2827, lng:-123.1207},
    disableDefaultUI: true,
    clickableIcons: false
  }

  var map = new google.maps.Map(document.getElementById('map'), options);

  console.log("JSON object from Flask back end:", MyResult);
  // https://stackoverflow.com/questions/684672/how-do-i-loop-through-or-enumerate-a-javascript-object
  // loop through the 'result', which containes a list. remember when we created a json string with the key 'result' in jasonify from flask like this: return jsonify({'result' : json_list})
  for (var key in MyResult){
    // MyResult[key] is the list. The full list of JSON strings. loop through the lengh of how many list indxes there are here
    // then parse the JSON string at the list index contained inside the 'result' being looped through into a new JSON object in a variable
    for (i = 0; i < MyResult[key].length; i++){
      var json_obj = JSON.parse(MyResult[key][i]);
      console.log(typeof json_obj['place_id']);
      console.log(typeof json_obj['location_lat']);
      console.log(typeof json_obj['location_long']);
      // parse the string values of the current lat and long in our dict as floats for the addMarker function to understand
      // https://www.w3schools.com/jsref/jsref_parsefloat.asp
      park_id = json_obj['place_id'];
      FloatLat = parseFloat(json_obj['location_lat']);
      FloatLong = parseFloat(json_obj['location_long']);
      addMarker({lat: FloatLat, lng: FloatLong}, park_id);
    }
  }

  // add marker function to add markers to our map
  function addMarker(coords, park_id){
    var info_box_park = document.getElementById("Park " + park_id);
    var marker = new google.maps.Marker({
      position:coords,
      map:map,
      icon: 'https://i.imgur.com/5rNpwiF.png'
    });

    // my own "scroll" function, so we don't end up repeating it's code when called/needed
    // un-higlights old element if the currently highlighted global variable is set to anything, then change that selected divs backround colour to white
    // highlights new element, takes the id string from the "info_box_park" & stores it inside of the var "currently_highlighted", to identify that selected dom, sets that selected doms colour to grey
    // https://stackoverflow.com/questions/11064081/javascript-change-google-map-marker-color
    function scroll(){
      map.setZoom(12);
      map.panTo(marker.getPosition());
      info_box_park.scrollIntoView({ behavior: 'smooth',});

      if (currently_highlighted){
        document.getElementById(currently_highlighted).style.backgroundColor = "white";
      }
      currently_highlighted = info_box_park.id;
      info_box_park.style.backgroundColor = "#f2f2f2";

      if (marker_selected){
        marker_selected.setIcon('https://i.imgur.com/5rNpwiF.png')
      }
      marker_selected = marker;
      marker.setIcon('https://mts.googleapis.com/vt/icon/name=icons/spotlight/spotlight-waypoint-blue.png&psize=16&font=fonts/Roboto-Regular.ttf&color=ff333333&ax=44&ay=48&scale=1')
    }

    // my own "zoom" function, does the same as zoom but doesnt scroll the div
    function zoom(){
      map.setZoom(12);
      map.panTo(marker.getPosition());

      if (currently_highlighted){
        document.getElementById(currently_highlighted).style.backgroundColor = "white";
      }
      currently_highlighted = info_box_park.id;
      info_box_park.style.backgroundColor = "#f2f2f2";

      if (marker_selected){
        marker_selected.setIcon('https://i.imgur.com/5rNpwiF.png')
      }
      marker_selected = marker;
      marker.setIcon('https://mts.googleapis.com/vt/icon/name=icons/spotlight/spotlight-waypoint-blue.png&psize=16&font=fonts/Roboto-Regular.ttf&color=ff333333&ax=44&ay=48&scale=1')
    }

    // listener to call the zoom function for when a marker is clicked on
    marker.addListener('click', function(){scroll();});

    // listener we put on the info_box_park div when clicked on, it'll centre the map on the marker
    info_box_park.addEventListener('click', function(){zoom();});
  }
}
